@model EEBank.Models.PaymentRequirements
@using EEBank.Models

@{
    ViewBag.Title = "Создать новое платежное требование";
}

<h2>Создать новое платежное требование</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Платежное требование</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       
       

        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfRequirements, "Тип платежного требования", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeOfRequirements", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeOfRequirements, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.СurrencyCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.СurrencyCode,"Код валюты", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.СurrencyCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SummOfremittance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SummOfremittance,"Сумма перевода", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SummOfremittance, "", new { @class = "text-danger" })
            </div>
        </div>

     


        <div class="form-group">
            @Html.LabelFor(model => model.BankID, "Банк", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BankID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BankID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BankReceiver, "Код банка", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.BankReceiver, "Код банка" )
                @Html.ValidationMessageFor(model => model.BankReceiver, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Benficiar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Benficiar,"Бенефициар", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Benficiar, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentPurpose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PaymentPurpose,"Цель отправления", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PaymentPurpose, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DocNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DocNumber,"Номер документа", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DocNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserUNP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserUNP, "УНП отправителя",new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserUNP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BankUNP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankUNP,"УНП получателя", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankUNP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться к списку", "Index")
</div>
