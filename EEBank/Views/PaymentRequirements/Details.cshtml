@model EEBank.Models.PaymentRequirements
@using EEBank.Models

@{
    ViewBag.Title = "Платежное поручение";
}

@{EEBankEntitie db = new EEBankEntitie();}
@{var user = db.Users.Where(m => m.Email == User.Identity.Name).FirstOrDefault();}
<h2>Платежное поручение</h2>

<div>
    <h4>Платежное поручение</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            ФИО отправителя
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Users.UserInf1.Where(p => p.UserID == model.UserID).FirstOrDefault().FullName)
        </dd>
        <dt>
            Дата создания документа
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>

        <dt>
            Код валюты
        </dt>

        <dd>
            @Html.DisplayFor(model => model.СurrencyCode)
        </dd>

        <dt>
            Сумма перевода
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SummOfremittance)
        </dd>

        <dt>
            Номер аккаунта
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AccountNumber)
        </dd>

        <dt>
            Бенефициар
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Benficiar)
        </dd>

        <dt>
            Банк отправитель
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BankReceiver)
        </dd>

        <dt>
            Цель отправления
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PaymentPurpose)
        </dd>

        <dt>
            Номер документа
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DocNumber)
        </dd>

        <dt>
            УНП отправителя
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserUNP)
        </dd>

        <dt>
            УНП банка
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BankUNP)
        </dd>

        <dt>
            Документ
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DocType1.DocName)
        </dd>

        <dt>
            Тип платежного поручения
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TypePaymentRequirements.TypeName)
        </dd>
        
        <dt>
            Менеджер
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FullInfManagers.FullName)
        </dd>
        <dt>
            Статус
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DocStatus.StatusName)
        </dd>

        

    </dl>
    @if (user.RoleId == db.Roles.Where(m => m.RoleName == "Менеджер").FirstOrDefault().RoleId)
    {
    <div class="form-group">
        @Html.LabelFor(model => model.Comment, "Причина отказа", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>
        
    }

</div>
@if (user.RoleId == db.Roles.Where(m => m.RoleName == "Менеджер").FirstOrDefault().RoleId)
    {
 using (Html.BeginForm("Details", "PaymentRequirements", FormMethod.Post))
{

    <div class="form-actions no-color">
        <input type="submit" name="action" value="Reject" class="btn btn-default" /> |
        <input type="submit" name="action" value="Accept" class="btn btn-default" /> |
        
    </div>
}
}
@Html.ActionLink("Back to List", "Index")